<?php
// view_file.php
// Database configuration
$host = 'db_vulnerable';
$username = 'root';
$password = 'root_password'; // Replace with your database password
$database = 'vulnerable_db'; // Replace with your database name


// Establish database connection
$conn = new mysqli($host, $username, $password, $database);
// Check connection
if ($conn->connect_error) {
  die("Database connection failed: " . $conn->connect_error);
}
// Check if the 'file' parameter is provided in the URL
if (isset($_GET['file'])) {
  // Vulnerable Path Traversal code
  $inputFile = $_GET['file']; // Get the 'file' parameter from the URL

  // Remove all traversal patterns and ensure it's just the filename
  $sanitizedFile = basename($inputFile);

  // Set the base directory where the files are expected to be
  $baseDir = "../vulnerabilities/";

  // Check if the 'vulnerabilities' directory exists
  if (is_dir($baseDir)) {
    // Get a list of files in the 'vulnerabilities' directory
    $files = scandir($baseDir);
    echo "Files in base directory:<br>";

    // Display the files in the 'vulnerabilities' directory for informational purposes
    foreach ($files as $file) {
      echo htmlspecialchars($file) . "<br>"; // Output each file's name
    }

    // Check if the sanitized file exists in the directory
    if (in_array($sanitizedFile, $files)) {
      // Construct the file path
      $path = $baseDir . $sanitizedFile;
      echo "Processed file: " . htmlspecialchars($sanitizedFile) . "<br>"; // Show sanitized file
      echo "Resolved path: " . htmlspecialchars($path) . "<br>"; // Show resolved path

      // Include the file if it exists
      if (file_exists($path) && is_file($path)) {
        include($path);
      } else {
        echo "File not found.";
      }
    } else {
      echo "Invalid file.";
    }
  } else {
    echo "Directory does not exist.<br>";
  }
  $conn->close();
  exit; // End the script execution
}
?>
