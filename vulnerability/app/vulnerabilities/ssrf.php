<?php

function fetch_url_content($url) {
  $user_agent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Version/14.1.1 Safari/537.36';

  // Blacklist of disallowed URLs/IPs
  $blacklist = [
    '127.0.0.1',    // Localhost
    'localhost',
    '169.254.169.254', // AWS Metadata
    '10.0.0.0/8',   // Private network range
    '192.168.0.0/16', // Private network range
    '0.0.0.0',      // Invalid IP
  ];

  // Check if the input URL contains a blacklisted item
  foreach ($blacklist as $blocked) {
    if (strpos($url, $blocked) !== false) {
      die("Access to this URL is forbidden for security reasons.");
    }
  }

  // Initialize cURL
  $options = [
    CURLOPT_URL => $url,
    CURLOPT_RETURNTRANSFER => true,
    CURLOPT_HEADER => false,
    CURLOPT_USERAGENT => $user_agent,
    CURLOPT_FOLLOWLOCATION => true,
    CURLOPT_TIMEOUT => 5,
  ];

  $ch = curl_init();
  curl_setopt_array($ch, $options);

  // Execute the request
  $response = curl_exec($ch);

  // Check for errors
  if (curl_errno($ch)) {
    die("Error fetching URL: " . curl_error($ch));
  }

  curl_close($ch);
  return $response;
}

if (isset($_GET['url'])) {
  // Fetch the URL from the user input
  $url = $_GET['url'];
  // Replace 2130706433 or 127.0.0.1 with host.docker.internal
  $url = str_replace(['2130706433', '127.0.0.1'], 'host.docker.internal', $url);


  /*
  VULNERABILITY:
  SSRF: The input URL is directly used without proper validation, allowing the attacker to
  send a request to internal or restricted resources.
  */

  // Make the request to the provided URL (vulnerable)
  $response = fetch_url_content($url);

  // Display the response (could be sensitive data from an internal API or service)
  echo "<pre>$response</pre>";
} else {

}
?>

<div class="container">
  <h1>SSRF and Path Traversal Vulnerability Exploited</h1>

  <div class="alert alert-warning">
    <strong>SSRF FILE FETCHED!</strong><br>
    Used for Path Traversal Vulnerability
  </div>

  <p class="alert alert-danger">
    This message indicates the potential exploitation of SSRF and Path Traversal vulnerabilities. These are critical security flaws that can allow unauthorized access to sensitive files and services.
  </p>
