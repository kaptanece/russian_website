<?php
// Function to make HTTP requests
function fetch_url_content($url) {
  $user_agent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Version/14.1.1 Safari/537.36';

  // Blacklist of disallowed URLs/IPs
  $blacklist = [
    '127.0.0.1',    // Localhost
    'localhost',
    '169.254.169.254', // AWS Metadata
    '10.0.0.0/8',   // Private network range
    '192.168.0.0/16', // Private network range
    '0.0.0.0',      // Invalid IP
  ];

  // Check if the input URL contains a blacklisted item
  /*foreach ($blacklist as $blocked) {
    if (strpos($url, $blocked) !== false) {
      die("Access to this URL is forbidden for security reasons.");
    }
  }*/

  // Initialize cURL
  $options = [
    CURLOPT_URL => $url,
    CURLOPT_RETURNTRANSFER => true,
    CURLOPT_HEADER => false,
    CURLOPT_USERAGENT => $user_agent,
    CURLOPT_FOLLOWLOCATION => true,
    CURLOPT_TIMEOUT => 5,
  ];

  $ch = curl_init();
  curl_setopt_array($ch, $options);

  // Execute the request
  $response = curl_exec($ch);

  // Check for errors
  if (curl_errno($ch)) {
    die("Error fetching URL: " . curl_error($ch));
  }

  curl_close($ch);
  return $response;
}

// Handling user input
if (isset($_GET['url'])) {
  $url = $_GET['url'];
  echo "<h2>Fetched Content:</h2>";
  echo "<pre>" . htmlspecialchars(fetch_url_content($url)) . "</pre>";
}
?>

<!DOCTYPE html>
<html>
<head>
  <title>SSRF Demonstration</title>
</head>
<body>
<h1>SSRF Vulnerability Demo</h1>
<form method="GET" action="">
  <label for="url">Enter URL to fetch:</label>
  <input type="text" name="url" id="url" placeholder="http://example.com" required>
  <button type="submit">Fetch</button>
</form>
</body>
</html>
